# приоритеты и их определение ( идут по порядку разделённые строкой):

# "**" возведение в степень

# "+" положительное значение
# "-" отрицательно значение
# "`" побитовое отрицание( тильда)

# "*" умножение
# "/" деление
# "//" целочисленное деление
# "%" остаток от деления

# "+" сложение
# "-" вычитание

# "|" побитовое ИЛИ

# "^" побитовое исключающее ИЛИ

# "&" побитовое И (амперсанд)

# ">>" побитовый сдвиг вправо
# "<<" побитовый сдвиг влево

# "<, >=, <, <=, ==, !=" сравнение

# "=, %=, /=, //=, -=, +=, *=, **=" присваивание

# "is, is not" индентичность

# "in, not in" вхождение

# "not" логическое отрицание

# "and" логическое И

# "or" логичкое ИЛИ

a = 5
b = 20
c = 40
# умножение и сложение
print("\nMulti Add:\t\t\t" ,a , "*" , c , "+" , b , "=" , a * c + b)
print("Multi Add1:\t\t\t" ,a , "*(" , c , "+" , b ,")=" , a * (c + b))
# целочисленное деление и вычитание
print("\nInteger_D Substect:\t",  a , "//" , c , "-" , b , "=" , a // c - b)
print("Integer_D Substect1:\t" , a , "-(" , c , "//" , b , ")=" , a - (c // b))
# остаток от деления и сложение
print("\nModulo Add:\t\t\t" ,c , "%" , a , "+" , b , "=" , c % a + b)
print("Modulo Add:\t\t\t" , c , "+(" , b , "%" , a , ")=" , c + (b % a))
# возведение в степень и сложение
print("\nExponent Add: \t\t" , a , "**" , b , "+" , c , "=" , a ** b + c)
print("Exponent Add1:\t\t" , a , "**(" , b , "+" , c , ")=" , a ** (b + c))

