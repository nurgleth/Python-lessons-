"""
Методы – это объекты:
связанные и несвязанные методы
"""
class Spam:
    def doit(self, message):
        print(message)

"""
В обычной ситуации мы создаем экземпляр и сразу же вызываем его метод для
вывода содержимого аргумента
"""
object1 = Spam()
object1.doit("hello world 1")

"""
Однако в действительности попутно создается объект связанного метода – как
раз перед круглыми скобками в вызове метода. Т.е. мы можем получить свя-
занный метод и без его вызова. Квалифицированное имя object.name – это вы-
ражение, которое возвращает объект. В следующем примере это выражение
возвращает объект связанного метода, в котором упакованы вместе экземпляр
(object1) и метод (Spam.doit). Мы можем присвоить этот связанный метод дру-
гому имени и затем использовать это имя для вызова, как простую функцию:
"""
object1 = Spam()
x = object1.doit            # Объект связанного метода: экземпляр+функция
x("Hello world 2")          # То же, что и object1.doit(‘...’)

"""
С другой стороны, если для получения метода doit использовать имя класса,
мы получим объект несвязанного метода, который просто ссылается на объект
функции. Чтобы вызвать метод этого типа, необходимо явно передавать экзем-
пляр класса в первом аргументе
"""
object1 = Spam()
t = Spam.doit               # Объект несвязанного метода
t(object1, "Hello world 3") # Передать экземпляр

"""
Те же самые правила действуют внутри методов класса, когда используются
атрибуты аргумента self, которые ссылаются на функции в классе. Выражение
self.method возвращает объект связанного метода, потому что self – это объект
экземпляра
"""

class Eggs:
    def m1(self, n):
        print(n)
    def m2(self):
        x = self.m1
        x(42)
Eggs().m2()